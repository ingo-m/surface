####################################
### Prepare Surface docker image ###
####################################

# Pull neurodocker image (for creating docker images):
docker pull kaczmarj/neurodocker:v0.3.2

# For info:
docker run --rm kaczmarj/neurodocker:v0.3.2 --help

# Create dockerfile (using neurodocker image):
docker run \
    --rm kaczmarj/neurodocker:v0.3.2 \
    generate \
    -b debian:jessie \
    -p apt \
    --user=root \
    --install gcc g++ tree nano htop rsync pigz git file \
    --neurodebian os_codename="jessie" download_server="germany-magdeburg" pkgs="dcm2niix fsl-complete" \
    --add-to-entrypoint "source /etc/fsl/5.0/fsl.sh" \
    --user=john \
    --miniconda \
        env_name="py_main" \
        conda_install="python=3.6 numpy scipy pip scikit-image" \
        conda_opts="-c conda-forge" \
        activate=True \
    --miniconda \
        env_name="py_segmentator" \
        conda_install="python=2.7 pip" \
        conda_opts="-c conda-forge" \
        activate=False \
    --miniconda \
        env_name="py_pyprf" \
        conda_install="python=3.6 pip" \
        conda_opts="-c conda-forge" \
        activate=True \
    --run-bash "mkdir /home/john/github \
                && cd /home/john/github \
                && git clone https://github.com/ingo-m/segmentator.git \
                && cd /home/john/github/segmentator \
                && git checkout docker-EED \
                && git checkout a77bcda769e9f252db8c6c9cf74047d901f4eca1 \
                && source activate py_segmentator \
                && pip install -r requirements.txt \
                && python setup.py install" \
    --run-bash "source activate py_pyprf \
                && pip install numpy \
                && pip install pyprf" \
    --run-bash "source activate py_main" \
    --run-bash "echo \"export USER=john\" > /home/john/.bashrc" \
    --run-bash "echo \"export USER=john\" > /home/john/.profile" \
    --run-bash "echo \"export OPENBLAS_NUM_THREADS=1\" >> /home/john/.bashrc" \
    --run-bash "echo \"export OPENBLAS_NUM_THREADS=1\" >> /home/john/.profile" \
    --run-bash "echo \"export MKL_NUM_THREADS=1\" >> /home/john/.bashrc" \
    --run-bash "echo \"export MKL_NUM_THREADS=1\" >> /home/john/.profile" \
    --run-bash "echo \"export NUMEXPR_NUM_THREADS=1\" >> /home/john/.bashrc" \
    --run-bash "echo \"export NUMEXPR_NUM_THREADS=1\" >> /home/john/.profile" \
    --run-bash "echo \"source activate py_main\" >> /home/john/.bashrc" \
    --run-bash "echo \"source activate py_main\" >> /home/john/.profile" \
    --workdir /home/john \
    > /home/john/PhD/GitLab/surface/docker/Dockerfile_Surface_Jessie.txt

# Find the following section in the dockerfile:

```
# Install NeuroDebian packages
RUN apt-get update -qq \
    && apt-get install -yq --no-install-recommends dcm2niix fsl-complete \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
```

# Right after this section, add:

```
#----------------------
# Install MCR and SPM12
#----------------------
# Install MATLAB Compiler Runtime
RUN apt-get update -qq && apt-get install -yq --no-install-recommends libxext6 libxt6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && echo "Downloading MATLAB Compiler Runtime ..." \
    && curl -sSL --retry 5 -o /tmp/mcr.zip https://www.mathworks.com/supportfiles/downloads/R2015a/deployment_files/R2015a/installers/glnxa64/MCR_R2015a_glnxa64_installer.zip \
    && unzip -q /tmp/mcr.zip -d /tmp/mcrtmp \
    && /tmp/mcrtmp/install -destinationFolder /opt/mcr -mode silent -agreeToLicense yes \
    && rm -rf /tmp/*

# Install standalone SPM
RUN echo "Downloading standalone SPM ..." \
    && curl -sSL --retry 5 -o spm.zip http://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/dev/spm12_r6472_Linux_R2015a.zip \
    && unzip -q spm.zip -d /opt \
    && chmod -R 777 /opt/spm* \
    && rm -rf spm.zip \
    && /opt/spm12/run_spm12.sh /opt/mcr/v85/ quit \
    && sed -i '$iexport SPMMCRCMD=\"/opt/spm12/run_spm12.sh /opt/mcr/v85/ script\"' $ND_ENTRYPOINT
ENV MATLABCMD=/opt/mcr/v85/toolbox/matlab \
    FORCE_SPMMCR=1 \
    LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/opt/mcr/v85/runtime/glnxa64:/opt/mcr/v85/bin/glnxa64:/opt/mcr/v85/sys/os/glnxa64:$LD_LIBRARY_PATH
```

# Build image from dockerfile:
cd /home/john/PhD/GitLab/surface/docker
docker build -t dockerimage_surface_jessie -f /home/john/PhD/GitLab/surface/docker/Dockerfile_Surface_Jessie.txt .

# Run docker from image with shared folders (read-only, just for checking
# whether the image can be run):
docker run -it --rm \
    -v /media/:/media/:ro \
    -v /home/john/PhD/GitLab/surface/analysis/:/home/john/PhD/GitLab/surface/analysis/:ro \
    dockerimage_surface_jessie bash

# Save image to tar file:
docker save -o /media/sf_D_DRIVE/MRI_Data_PhD/09_surface/Docker_Metadata/dockerimage_surface_jessie.tar dockerimage_surface_jessie
